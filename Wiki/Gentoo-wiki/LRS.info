╦  ┬┬  ┬┌─┐╦═╗┌─┐┌─┐┌─┐┬  ┬┌─┐┬─┐┬ ┬╔═╗┬ ┬┌─┐┌┬┐┌─┐┌┬┐
║  │└┐┌┘├┤ ╠╦╝├┤ │  │ │└┐┌┘├┤ ├┬┘└┬┘╚═╗└┬┘└─┐ │ ├┤ │││
╩═╝┴ └┘ └─┘╩╚═└─┘└─┘└─┘ └┘ └─┘┴└─ ┴ ╚═╝ ┴ └─┘ ┴ └─┘┴ ┴


Author : sabayonino
Contact : sabayonino@gmail.com
URL : https://www.gentoo.org
Forum profile : https://forums.gentoo.org/profile.php?mode=viewprofile&u=272470


=======================================================

=== INTRO ===

This is my own project to replace SystemRescucecd ISO image. Just for fun.
Anyone can do this.

LRS raw image is bootable on BIOS/UEFI systems running Grub2
It is based on Gentoo AMD64 no-multilib. It was build from stage3

LRS raw image can be installed on any USB/HDD device.

USB/HDD Min size required : >=8 GB (8GB should be tiny , depends on USB chipset)


== About Users data ==
* You can install and update LRS system just like a Gentoo installation.
	LRS is persistence. All your data will be stored on the device
	included passwords , WiFi passwords , accounts and browser cache etc.
	and all system changes will be preserved.

=== Wipe all user data ===
* All user data can be safely deleted running /usr/local/sbin/wipe_users_dir.sh
        This script going to wipe all users data and fill with zeros all free space.



=== About ROOT user ===
=================================================================================="
LRS run with ROOT privileges , please pay close attention !!! "
For daily use, creating an underprivileged user is highly recommended .
[ https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Finalizing ]"

Root autologin is invoked by /etc/inittab (provided by sys-apps/sysvinit package)
# mv /etc/inittab.gentoo /etc/inittab

to reset as default gentoo inittab  then create a regular user as explained
to the wiki.


=== Install LRS ===
* Raw ZSTD compressed image to USB/HDD device (replace /dev/sd<?>: according your preferences)

#1
zstd -d -c -v LRS.img.zst -o /dev/sd<?>


#2
zstd -d -v  -c LRS.img.zst | dd of=/dev/sd<?> bs=4M conv=sync,noerror


#3 Uncompress zstd running using mutiple CPU thread (-T# )
zstd -d -v -k -T4 LRS.img.zst

You'll have a raw image LRS.img
You can "burn" LRS.img running your favourite tools like DD/DCFLDD , Rosa image writer , Balena Etcher etc..


#4
cat LRS.img > /dev/sd<?>

=== Manage the raw file ===

You can mount LRS raw image and update the image :
Example /dev/loop0 is considered and you may have different:

# losetup --find --show LRS.img
/dev/loop0

# partprobe /dev/loop0

# fdsik -l /dev/loop0

Disk /dev/loop0: 15 GiB, 16106127360 bytes, 31457280 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: gpt
Disk identifier: BA83F68A-C71F-4811-91EA-ED92B06D4DB3

Password:
Disk /dev/loop0: 7,5 GiB, 8074035200 bytes, 15769600 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: gpt
Disk identifier: 700981BF-1069-491E-B47C-B3CA35C35A5C

Device        Start      End  Sectors  Size Type
/dev/loop0p1   2048     4095     2048    1M BIOS boot
/dev/loop0p2   4096   208895   204800  100M EFI System
/dev/loop0p3 208896 15769566 15560671  7,4G Linux filesystem
Mount the /dev/loop0p3 (the root filesystem) /dev (and /dev/shm)  /proc /sys filesystems according on https://wiki.gentoo.org/wiki/Chroot
chroot in /dev/loop0p3.
Do anything.
Exit and umount all filesystems
losetup -d /dev/loop0


==== FSArchiver image as partition(s) backup ====

# fsarchiver archinfo LRS.fsa
====================== archive information ======================
Archive type:                   filesystems
Filesystems count:              2
Archive id:                     5df57d9e
Archive file format:            FsArCh_002
Archive created with:           0.8.5
Archive creation date:          2019-12-13_21-30-25
Archive label:                  20191213-LRS backup
Minimum fsarchiver version:     0.6.4.0
Compression level:              14 (zstd level 14)
Encryption algorithm:           none

===================== filesystem information ====================
Filesystem id in archive:       0
Filesystem format:              vfat
Filesystem label:               NO NAME
Filesystem uuid:                <none>
Original device:                /dev/loop0p2
Original filesystem size:       98.45 MB (103227392 bytes)
Space used in filesystem:       130.00 KB (133120 bytes)

===================== filesystem information ====================
Filesystem id in archive:       1
Filesystem format:              xfs
Filesystem label:
Filesystem uuid:                2fbc173a-ee88-43f3-a4f2-889224b05631
Original device:                /dev/loop0p3
Original filesystem size:       14.89 GB (15988666368 bytes)
Space used in filesystem:       4.37 GB (4691238912 bytes)



=== You can rewrite LRS.fsa as backup (/dev/loop0p2 and /dev/loop0p3 must be probered) ====

# fsarchiver savefs LRS.fsa /dev/loop0p2 /dev/loop0p3 -Z14 -J6 -L"LRS Label if needed" --exclude=/usr/portage -v



==== Create your own RAW sparse image with fixed size (Example 15 GB) ====

# truncate -s 15G MyImage.img

Partitioning your image (GPT , BIOS/UEFI boot)

# sgdisk --clear \
  --new 1::+1M --typecode=1:ef02 --change-name=1:'BIOS boot partition' \
  --new 2::+100M --typecode=2:ef00 --change-name=2:'EFI System' \
  --new 3::-0 --typecode=3:8300 --change-name=3:'LRS filesystem' \
  MyImage.img

  Keep in mind : You must install and configure your favourite bootloader just like GRUB2


==== Convert LRS raw image to VirtualBox disk image ====

If you need VirtualBox to test your LRS installation , you can convert LRS raw image to
VirtaulBox Disk umage , just run :

$ VBoxManage convertdd <LRS-raw-image>.img <New-LRS-Vbox-Image>.vdi --format VDI

VBoxManage path is ' /opt/bin '  usually.


Good luck and have a fun !

